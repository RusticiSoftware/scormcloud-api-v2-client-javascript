/*
 * SCORM Cloud Rest API
 * REST API used for SCORM Cloud integrations.
 *
 * OpenAPI spec version: 2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.27
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['rustici-software-cloud-v2/ApiClient', 'rustici-software-cloud-v2/rustici-software-cloud-v2-model/BatchTagsSchema', 'rustici-software-cloud-v2/rustici-software-cloud-v2-model/CreatePrivateInvitationSchema', 'rustici-software-cloud-v2/rustici-software-cloud-v2-model/CreatePublicInvitationSchema', 'rustici-software-cloud-v2/rustici-software-cloud-v2-model/InvitationJobStatusSchema', 'rustici-software-cloud-v2/rustici-software-cloud-v2-model/InvitationSummaryList', 'rustici-software-cloud-v2/rustici-software-cloud-v2-model/InvitationSummarySchema', 'rustici-software-cloud-v2/rustici-software-cloud-v2-model/MessageSchema', 'rustici-software-cloud-v2/rustici-software-cloud-v2-model/PrivateInvitationList', 'rustici-software-cloud-v2/rustici-software-cloud-v2-model/PrivateInvitationSchema', 'rustici-software-cloud-v2/rustici-software-cloud-v2-model/PrivateInvitationUpdateSchema', 'rustici-software-cloud-v2/rustici-software-cloud-v2-model/PublicInvitationList', 'rustici-software-cloud-v2/rustici-software-cloud-v2-model/PublicInvitationSchema', 'rustici-software-cloud-v2/rustici-software-cloud-v2-model/PublicInvitationUpdateSchema', 'rustici-software-cloud-v2/rustici-software-cloud-v2-model/TagListSchema', 'rustici-software-cloud-v2/rustici-software-cloud-v2-model/UserInvitationList'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../rustici-software-cloud-v2-model/BatchTagsSchema'), require('../rustici-software-cloud-v2-model/CreatePrivateInvitationSchema'), require('../rustici-software-cloud-v2-model/CreatePublicInvitationSchema'), require('../rustici-software-cloud-v2-model/InvitationJobStatusSchema'), require('../rustici-software-cloud-v2-model/InvitationSummaryList'), require('../rustici-software-cloud-v2-model/InvitationSummarySchema'), require('../rustici-software-cloud-v2-model/MessageSchema'), require('../rustici-software-cloud-v2-model/PrivateInvitationList'), require('../rustici-software-cloud-v2-model/PrivateInvitationSchema'), require('../rustici-software-cloud-v2-model/PrivateInvitationUpdateSchema'), require('../rustici-software-cloud-v2-model/PublicInvitationList'), require('../rustici-software-cloud-v2-model/PublicInvitationSchema'), require('../rustici-software-cloud-v2-model/PublicInvitationUpdateSchema'), require('../rustici-software-cloud-v2-model/TagListSchema'), require('../rustici-software-cloud-v2-model/UserInvitationList'));
  } else {
    // Browser globals (root is window)
    if (!root.RusticiSoftwareCloudV2) {
      root.RusticiSoftwareCloudV2 = {};
    }
    root.RusticiSoftwareCloudV2.InvitationsApi = factory(root.RusticiSoftwareCloudV2.ApiClient, root.RusticiSoftwareCloudV2.BatchTagsSchema, root.RusticiSoftwareCloudV2.CreatePrivateInvitationSchema, root.RusticiSoftwareCloudV2.CreatePublicInvitationSchema, root.RusticiSoftwareCloudV2.InvitationJobStatusSchema, root.RusticiSoftwareCloudV2.InvitationSummaryList, root.RusticiSoftwareCloudV2.InvitationSummarySchema, root.RusticiSoftwareCloudV2.MessageSchema, root.RusticiSoftwareCloudV2.PrivateInvitationList, root.RusticiSoftwareCloudV2.PrivateInvitationSchema, root.RusticiSoftwareCloudV2.PrivateInvitationUpdateSchema, root.RusticiSoftwareCloudV2.PublicInvitationList, root.RusticiSoftwareCloudV2.PublicInvitationSchema, root.RusticiSoftwareCloudV2.PublicInvitationUpdateSchema, root.RusticiSoftwareCloudV2.TagListSchema, root.RusticiSoftwareCloudV2.UserInvitationList);
  }
}(this, function(ApiClient, BatchTagsSchema, CreatePrivateInvitationSchema, CreatePublicInvitationSchema, InvitationJobStatusSchema, InvitationSummaryList, InvitationSummarySchema, MessageSchema, PrivateInvitationList, PrivateInvitationSchema, PrivateInvitationUpdateSchema, PublicInvitationList, PublicInvitationSchema, PublicInvitationUpdateSchema, TagListSchema, UserInvitationList) {
  'use strict';

  /**
   * Invitations service.
   * @module rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi
   */

  /**
   * Constructs a new InvitationsApi. 
   * @alias module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi
   * @class
   * @param {module:rustici-software-cloud-v2/ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:rustici-software-cloud-v2/ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the createPrivateInvitation operation.
     * @callback module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~createPrivateInvitationCallback
     * @param {String} error Error message, if any.
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/InvitationSummarySchema} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a Private Invitation to a Course 
     * Creates a private invitation job which sends emails with a link to the course.  Invitations are meant as a way to provide access to your content.  Registrations will be created from the provided email addresses.  The email job will asynchronously send emails to those addresses inviting them to the course.  When the learners visit the link in the email, the course will be launched with the already created registration.  The private invitation ID can be used with GetPrivateInvitationJobStatus to view the status of the email job.  >**Info:** >While invitations are a way to provide access to your content, the majority of use cases would be better suited by creating a registration and building a launch link with the registration endpoints instead.  Invitations build upon registrations by grouping a set of registrations together and adding access control measures to said group. Invitations could be used to pass yearly compliance training to an entire company.  Invitations also have an associated expiration date which determines when the course will no longer be launchable. 
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/CreatePrivateInvitationSchema} privateInvitationRequest 
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~createPrivateInvitationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/InvitationSummarySchema}
     */
    this.createPrivateInvitation = function(privateInvitationRequest, callback) {
      var postBody = privateInvitationRequest;

      // verify the required parameter 'privateInvitationRequest' is set
      if (privateInvitationRequest === undefined || privateInvitationRequest === null) {
        throw new Error("Missing the required parameter 'privateInvitationRequest' when calling createPrivateInvitation");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APP_NORMAL', 'OAUTH'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = InvitationSummarySchema;

      return this.apiClient.callApi(
        '/invitations/private', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the createPublicInvitation operation.
     * @callback module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~createPublicInvitationCallback
     * @param {String} error Error message, if any.
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/PublicInvitationSchema} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a Public Invitation to a Course 
     * Creates an invitation link to the course which can then be publicly distributed.  Invitations are meant as a way to provide access to your content.  When a learner visits the link, they will be prompted for name and email, a registration will be created from the information provided, and they will be redirected to the course.  Since anyone visiting the link will create a registration, it is highly advised that you set the `registrationCap` parameter when calling this method.  >**Info:** >While invitations are a way to provide access to your content, the majority of use cases would be better suited by creating a registration and building a launch link with the registration endpoints instead.  Invitations build upon registrations by grouping a set of registrations together and adding access control measures to said group. Invitations could be used to pass yearly compliance training to an entire company.  Invitations also have an associated expiration date which determines when the course will no longer be launchable. 
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/CreatePublicInvitationSchema} publicInvitationRequest A description of the public invitation to be created.
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~createPublicInvitationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/PublicInvitationSchema}
     */
    this.createPublicInvitation = function(publicInvitationRequest, callback) {
      var postBody = publicInvitationRequest;

      // verify the required parameter 'publicInvitationRequest' is set
      if (publicInvitationRequest === undefined || publicInvitationRequest === null) {
        throw new Error("Missing the required parameter 'publicInvitationRequest' when calling createPublicInvitation");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APP_NORMAL', 'OAUTH'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = PublicInvitationSchema;

      return this.apiClient.callApi(
        '/invitations/public', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteInvitationTags operation.
     * @callback module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~deleteInvitationTagsCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete tags from an Invitation 
     * Deletes the specified tags from the invitation.  Deleting tags that do not exist will still result in a success. 
     * @param {String} invitationId 
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/TagListSchema} tags 
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~deleteInvitationTagsCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.deleteInvitationTags = function(invitationId, tags, callback) {
      var postBody = tags;

      // verify the required parameter 'invitationId' is set
      if (invitationId === undefined || invitationId === null) {
        throw new Error("Missing the required parameter 'invitationId' when calling deleteInvitationTags");
      }

      // verify the required parameter 'tags' is set
      if (tags === undefined || tags === null) {
        throw new Error("Missing the required parameter 'tags' when calling deleteInvitationTags");
      }


      var pathParams = {
        'invitationId': invitationId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APP_NORMAL', 'OAUTH'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/invitations/{invitationId}/tags', 'DELETE',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getAllInvitations operation.
     * @callback module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~getAllInvitationsCallback
     * @param {String} error Error message, if any.
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/InvitationSummaryList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a list of Invitations 
     * Returns a list of invitations (both public and private).  Can be filtered using the request parameters to provide a subset of results.  >**Note:** >This request is paginated and will only provide a limited amount of resources at a time.  If there are more results to be collected, a `more` token provided with the response which can be passed to get the next page of results.  When passing this token, no other filter parameters can be sent as part of the request.  The resources will continue to respect the filters passed in by the original request. 
     * @param {Object} opts Optional parameters
     * @param {String} opts.courseId Only retrieve resources having `courseId`
     * @param {Date} opts.since Filter by ISO 8601 TimeStamp inclusive (defaults to UTC)
     * @param {Date} opts.until Filter by ISO 8601 TimeStamp inclusive (defaults to UTC)
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/String} opts.datetimeFilter Specifies field that `since` and `until` parameters are applied against (default to updated)
     * @param {Array.<String>} opts.tags Filter items matching any tag provided (not all)
     * @param {String} opts.filter Optional string which filters results by a specified field (described by filterBy).
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/String} opts.filterBy Optional enum parameter for specifying the field on which to run the filter.  (default to invitation_id)
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/String} opts.orderBy Optional enum parameter for specifying the field and order by which to sort the results.  (default to updated_asc)
     * @param {String} opts.more Pagination token returned as `more` property of multi page list requests
     * @param {Boolean} opts.includeTotalCount Include the total count of results matching the provided filters as a header on the initial request.  The header will not be present on subsequent requests resulting from passing the `more` token.  (default to false)
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~getAllInvitationsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/InvitationSummaryList}
     */
    this.getAllInvitations = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'courseId': opts['courseId'],
        'since': opts['since'],
        'until': opts['until'],
        'datetimeFilter': opts['datetimeFilter'],
        'filter': opts['filter'],
        'filterBy': opts['filterBy'],
        'orderBy': opts['orderBy'],
        'more': opts['more'],
        'includeTotalCount': opts['includeTotalCount'],
      };
      var collectionQueryParams = {
        'tags': {
          value: opts['tags'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APP_NORMAL', 'OAUTH'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = InvitationSummaryList;

      return this.apiClient.callApi(
        '/invitations', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getInvitationTags operation.
     * @callback module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~getInvitationTagsCallback
     * @param {String} error Error message, if any.
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/TagListSchema} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get tags for an Invitation 
     * Returns the tags for the invitation. 
     * @param {String} invitationId 
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~getInvitationTagsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/TagListSchema}
     */
    this.getInvitationTags = function(invitationId, callback) {
      var postBody = null;

      // verify the required parameter 'invitationId' is set
      if (invitationId === undefined || invitationId === null) {
        throw new Error("Missing the required parameter 'invitationId' when calling getInvitationTags");
      }


      var pathParams = {
        'invitationId': invitationId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APP_NORMAL', 'OAUTH'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = TagListSchema;

      return this.apiClient.callApi(
        '/invitations/{invitationId}/tags', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getPrivateInvitation operation.
     * @callback module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~getPrivateInvitationCallback
     * @param {String} error Error message, if any.
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/PrivateInvitationSchema} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get detailed information about a Private Invitation 
     * Returns detailed information about the private invitation.  This includes the email sent, course ID, and whether new the invitation can still be launched or not. 
     * @param {String} invitationId 
     * @param {Object} opts Optional parameters
     * @param {Boolean} opts.includeRegistrationCount Include the registration count in the results (default to false)
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~getPrivateInvitationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/PrivateInvitationSchema}
     */
    this.getPrivateInvitation = function(invitationId, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'invitationId' is set
      if (invitationId === undefined || invitationId === null) {
        throw new Error("Missing the required parameter 'invitationId' when calling getPrivateInvitation");
      }


      var pathParams = {
        'invitationId': invitationId
      };
      var queryParams = {
        'includeRegistrationCount': opts['includeRegistrationCount'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APP_NORMAL', 'OAUTH'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = PrivateInvitationSchema;

      return this.apiClient.callApi(
        '/invitations/private/{invitationId}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getPrivateInvitationJobStatus operation.
     * @callback module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~getPrivateInvitationJobStatusCallback
     * @param {String} error Error message, if any.
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/InvitationJobStatusSchema} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get email job status for a Private Invitation 
     * Check the status of a private invitation email job.  This can be called incrementally to check the progress of the emails. 
     * @param {String} invitationId 
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~getPrivateInvitationJobStatusCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/InvitationJobStatusSchema}
     */
    this.getPrivateInvitationJobStatus = function(invitationId, callback) {
      var postBody = null;

      // verify the required parameter 'invitationId' is set
      if (invitationId === undefined || invitationId === null) {
        throw new Error("Missing the required parameter 'invitationId' when calling getPrivateInvitationJobStatus");
      }


      var pathParams = {
        'invitationId': invitationId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APP_NORMAL', 'OAUTH'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = InvitationJobStatusSchema;

      return this.apiClient.callApi(
        '/invitations/private/{invitationId}/jobStatus', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getPrivateInvitations operation.
     * @callback module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~getPrivateInvitationsCallback
     * @param {String} error Error message, if any.
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/PrivateInvitationList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a list of Private Invitations 
     * Returns a list of private invitations.  Can be filtered using the request parameters to provide a subset of results.  >**Note:** >This request is paginated and will only provide a limited amount of resources at a time.  If there are more results to be collected, a `more` token provided with the response which can be passed to get the next page of results.  When passing this token, no other filter parameters can be sent as part of the request.  The resources will continue to respect the filters passed in by the original request. 
     * @param {Object} opts Optional parameters
     * @param {String} opts.courseId Only retrieve resources having `courseId`
     * @param {Date} opts.since Filter by ISO 8601 TimeStamp inclusive (defaults to UTC)
     * @param {Date} opts.until Filter by ISO 8601 TimeStamp inclusive (defaults to UTC)
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/String} opts.datetimeFilter Specifies field that `since` and `until` parameters are applied against (default to updated)
     * @param {Array.<String>} opts.tags Filter items matching any tag provided (not all)
     * @param {String} opts.filter Optional string which filters results by a specified field (described by filterBy).
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/String} opts.filterBy Optional enum parameter for specifying the field on which to run the filter.  (default to invitation_id)
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/String} opts.orderBy Optional enum parameter for specifying the field and order by which to sort the results.  (default to updated_asc)
     * @param {String} opts.more Pagination token returned as `more` property of multi page list requests
     * @param {Boolean} opts.includeTotalCount Include the total count of results matching the provided filters as a header on the initial request.  The header will not be present on subsequent requests resulting from passing the `more` token.  (default to false)
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~getPrivateInvitationsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/PrivateInvitationList}
     */
    this.getPrivateInvitations = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'courseId': opts['courseId'],
        'since': opts['since'],
        'until': opts['until'],
        'datetimeFilter': opts['datetimeFilter'],
        'filter': opts['filter'],
        'filterBy': opts['filterBy'],
        'orderBy': opts['orderBy'],
        'more': opts['more'],
        'includeTotalCount': opts['includeTotalCount'],
      };
      var collectionQueryParams = {
        'tags': {
          value: opts['tags'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APP_NORMAL', 'OAUTH'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = PrivateInvitationList;

      return this.apiClient.callApi(
        '/invitations/private', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getPrivateUserInvitations operation.
     * @callback module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~getPrivateUserInvitationsCallback
     * @param {String} error Error message, if any.
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/UserInvitationList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a list of Private User Invitations 
     * Get a list of user who were invited to view the course.  Can be filtered using the request parameters to provide a subset of results.  >**Note:** >This request is paginated and will only provide a limited amount of resources at a time.  If there are more results to be collected, a `more` token provided with the response which can be passed to get the next page of results.  When passing this token, no other filter parameters can be sent as part of the request.  The resources will continue to respect the filters passed in by the original request. 
     * @param {String} invitationId 
     * @param {Object} opts Optional parameters
     * @param {Date} opts.since Filter by ISO 8601 TimeStamp inclusive (defaults to UTC)
     * @param {Date} opts.until Filter by ISO 8601 TimeStamp inclusive (defaults to UTC)
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/String} opts.datetimeFilter Specifies field that `since` and `until` parameters are applied against (default to updated)
     * @param {String} opts.filter Optional string which filters results by a specified field (described by filterBy).
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/String} opts.filterBy Optional enum parameter for specifying the field on which to run the filter.  (default to registration_id)
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/String} opts.orderBy Optional enum parameter for specifying the field and order by which to sort the results.  (default to updated_asc)
     * @param {String} opts.more Pagination token returned as `more` property of multi page list requests
     * @param {Boolean} opts.includeRegistrationReport Optional flag to include basic registration information
     * @param {Boolean} opts.includeTotalCount Include the total count of results matching the provided filters as a header on the initial request.  The header will not be present on subsequent requests resulting from passing the `more` token.  (default to false)
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~getPrivateUserInvitationsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/UserInvitationList}
     */
    this.getPrivateUserInvitations = function(invitationId, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'invitationId' is set
      if (invitationId === undefined || invitationId === null) {
        throw new Error("Missing the required parameter 'invitationId' when calling getPrivateUserInvitations");
      }


      var pathParams = {
        'invitationId': invitationId
      };
      var queryParams = {
        'since': opts['since'],
        'until': opts['until'],
        'datetimeFilter': opts['datetimeFilter'],
        'filter': opts['filter'],
        'filterBy': opts['filterBy'],
        'orderBy': opts['orderBy'],
        'more': opts['more'],
        'includeRegistrationReport': opts['includeRegistrationReport'],
        'includeTotalCount': opts['includeTotalCount'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APP_NORMAL', 'OAUTH'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = UserInvitationList;

      return this.apiClient.callApi(
        '/invitations/private/{invitationId}/userInvitations', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getPublicInvitation operation.
     * @callback module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~getPublicInvitationCallback
     * @param {String} error Error message, if any.
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/PublicInvitationSchema} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get detailed information about a Public Invitation 
     * Returns detailed information about the public invitation.  This includes url, registration cap, and whether new learners can accept the invitation or not. 
     * @param {String} invitationId 
     * @param {Object} opts Optional parameters
     * @param {Boolean} opts.includeRegistrationCount Include the registration count in the results (default to false)
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~getPublicInvitationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/PublicInvitationSchema}
     */
    this.getPublicInvitation = function(invitationId, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'invitationId' is set
      if (invitationId === undefined || invitationId === null) {
        throw new Error("Missing the required parameter 'invitationId' when calling getPublicInvitation");
      }


      var pathParams = {
        'invitationId': invitationId
      };
      var queryParams = {
        'includeRegistrationCount': opts['includeRegistrationCount'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APP_NORMAL', 'OAUTH'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = PublicInvitationSchema;

      return this.apiClient.callApi(
        '/invitations/public/{invitationId}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getPublicInvitations operation.
     * @callback module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~getPublicInvitationsCallback
     * @param {String} error Error message, if any.
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/PublicInvitationList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a list of Public Invitations 
     * Returns a list of public invitations.  Can be filtered using the request parameters to provide a subset of results.  >**Note:** >This request is paginated and will only provide a limited amount of resources at a time.  If there are more results to be collected, a `more` token provided with the response which can be passed to get the next page of results.  When passing this token, no other filter parameters can be sent as part of the request.  The resources will continue to respect the filters passed in by the original request. 
     * @param {Object} opts Optional parameters
     * @param {String} opts.courseId Only retrieve resources having `courseId`
     * @param {Date} opts.since Filter by ISO 8601 TimeStamp inclusive (defaults to UTC)
     * @param {Date} opts.until Filter by ISO 8601 TimeStamp inclusive (defaults to UTC)
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/String} opts.datetimeFilter Specifies field that `since` and `until` parameters are applied against (default to updated)
     * @param {Array.<String>} opts.tags Filter items matching any tag provided (not all)
     * @param {String} opts.filter Optional string which filters results by a specified field (described by filterBy).
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/String} opts.filterBy Optional enum parameter for specifying the field on which to run the filter.  (default to invitation_id)
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/String} opts.orderBy Optional enum parameter for specifying the field and order by which to sort the results.  (default to updated_asc)
     * @param {String} opts.more Pagination token returned as `more` property of multi page list requests
     * @param {Boolean} opts.includeTotalCount Include the total count of results matching the provided filters as a header on the initial request.  The header will not be present on subsequent requests resulting from passing the `more` token.  (default to false)
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~getPublicInvitationsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/PublicInvitationList}
     */
    this.getPublicInvitations = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'courseId': opts['courseId'],
        'since': opts['since'],
        'until': opts['until'],
        'datetimeFilter': opts['datetimeFilter'],
        'filter': opts['filter'],
        'filterBy': opts['filterBy'],
        'orderBy': opts['orderBy'],
        'more': opts['more'],
        'includeTotalCount': opts['includeTotalCount'],
      };
      var collectionQueryParams = {
        'tags': {
          value: opts['tags'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APP_NORMAL', 'OAUTH'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = PublicInvitationList;

      return this.apiClient.callApi(
        '/invitations/public', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getPublicUserInvitations operation.
     * @callback module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~getPublicUserInvitationsCallback
     * @param {String} error Error message, if any.
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/UserInvitationList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a list of Public User Invitations 
     * Returns a list of users who have visited the public invitation link.  Can be filtered using the request parameters to provide a subset of results.  >**Note:** >This request is paginated and will only provide a limited amount of resources at a time.  If there are more results to be collected, a `more` token provided with the response which can be passed to get the next page of results.  When passing this token, no other filter parameters can be sent as part of the request.  The resources will continue to respect the filters passed in by the original request. 
     * @param {String} invitationId 
     * @param {Object} opts Optional parameters
     * @param {Date} opts.since Filter by ISO 8601 TimeStamp inclusive (defaults to UTC)
     * @param {Date} opts.until Filter by ISO 8601 TimeStamp inclusive (defaults to UTC)
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/String} opts.datetimeFilter Specifies field that `since` and `until` parameters are applied against (default to updated)
     * @param {String} opts.filter Optional string which filters results by a specified field (described by filterBy).
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/String} opts.filterBy Optional enum parameter for specifying the field on which to run the filter.  (default to registration_id)
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/String} opts.orderBy Optional enum parameter for specifying the field and order by which to sort the results.  (default to updated_asc)
     * @param {String} opts.more Pagination token returned as `more` property of multi page list requests
     * @param {Boolean} opts.includeRegistrationReport Optional flag to include basic registration information
     * @param {Boolean} opts.includeTotalCount Include the total count of results matching the provided filters as a header on the initial request.  The header will not be present on subsequent requests resulting from passing the `more` token.  (default to false)
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~getPublicUserInvitationsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/UserInvitationList}
     */
    this.getPublicUserInvitations = function(invitationId, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'invitationId' is set
      if (invitationId === undefined || invitationId === null) {
        throw new Error("Missing the required parameter 'invitationId' when calling getPublicUserInvitations");
      }


      var pathParams = {
        'invitationId': invitationId
      };
      var queryParams = {
        'since': opts['since'],
        'until': opts['until'],
        'datetimeFilter': opts['datetimeFilter'],
        'filter': opts['filter'],
        'filterBy': opts['filterBy'],
        'orderBy': opts['orderBy'],
        'more': opts['more'],
        'includeRegistrationReport': opts['includeRegistrationReport'],
        'includeTotalCount': opts['includeTotalCount'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APP_NORMAL', 'OAUTH'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = UserInvitationList;

      return this.apiClient.callApi(
        '/invitations/public/{invitationId}/userInvitations', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the putInvitationTags operation.
     * @callback module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~putInvitationTagsCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Add tags to an Invitation 
     * Applies the provided tags to the invitation.  Tags are used to easily identify resources.  Adding tags can enable more refined searches when making calls to certain endpoints (e.g. GetInvitations). 
     * @param {String} invitationId 
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/TagListSchema} tags 
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~putInvitationTagsCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.putInvitationTags = function(invitationId, tags, callback) {
      var postBody = tags;

      // verify the required parameter 'invitationId' is set
      if (invitationId === undefined || invitationId === null) {
        throw new Error("Missing the required parameter 'invitationId' when calling putInvitationTags");
      }

      // verify the required parameter 'tags' is set
      if (tags === undefined || tags === null) {
        throw new Error("Missing the required parameter 'tags' when calling putInvitationTags");
      }


      var pathParams = {
        'invitationId': invitationId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APP_NORMAL', 'OAUTH'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/invitations/{invitationId}/tags', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the putInvitationTagsBatch operation.
     * @callback module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~putInvitationTagsBatchCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Add a group of tags to a group of Invitations 
     * Applies all of the provided tags on all of the provided invitations.  Both public and private invitations may be tagged via this operation.  Tags are used to easily identify resources.  Adding tags can enable more refined searches when making calls to certain endpoints (e.g. GetInvitations). 
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/BatchTagsSchema} batch Array of ids, and array of tags for bulk tag operations
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~putInvitationTagsBatchCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.putInvitationTagsBatch = function(batch, callback) {
      var postBody = batch;

      // verify the required parameter 'batch' is set
      if (batch === undefined || batch === null) {
        throw new Error("Missing the required parameter 'batch' when calling putInvitationTagsBatch");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APP_NORMAL', 'OAUTH'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/invitations/tags', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the updatePrivateInvitation operation.
     * @callback module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~updatePrivateInvitationCallback
     * @param {String} error Error message, if any.
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/PrivateInvitationSchema} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update information about a Private Invitation 
     * Updates information about the private invitation, such as the expiration date and registration cap.  Only non-null values that are provided will be updated. 
     * @param {String} invitationId 
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/PrivateInvitationUpdateSchema} invitationUpdateSchema Object with values to be updated.  Any value not specified above will be ignored. 
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~updatePrivateInvitationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/PrivateInvitationSchema}
     */
    this.updatePrivateInvitation = function(invitationId, invitationUpdateSchema, callback) {
      var postBody = invitationUpdateSchema;

      // verify the required parameter 'invitationId' is set
      if (invitationId === undefined || invitationId === null) {
        throw new Error("Missing the required parameter 'invitationId' when calling updatePrivateInvitation");
      }

      // verify the required parameter 'invitationUpdateSchema' is set
      if (invitationUpdateSchema === undefined || invitationUpdateSchema === null) {
        throw new Error("Missing the required parameter 'invitationUpdateSchema' when calling updatePrivateInvitation");
      }


      var pathParams = {
        'invitationId': invitationId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APP_NORMAL', 'OAUTH'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = PrivateInvitationSchema;

      return this.apiClient.callApi(
        '/invitations/private/{invitationId}', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the updatePublicInvitation operation.
     * @callback module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~updatePublicInvitationCallback
     * @param {String} error Error message, if any.
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/PublicInvitationSchema} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update information about a Public Invitation 
     * Updates information about the public invitation, such as the expiration date and registration cap.  Only non-null values that are provided will be updated. 
     * @param {String} invitationId 
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/PublicInvitationUpdateSchema} invitationUpdateSchema Object with values to be updated.  Any value not specified above will be ignored. 
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~updatePublicInvitationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/PublicInvitationSchema}
     */
    this.updatePublicInvitation = function(invitationId, invitationUpdateSchema, callback) {
      var postBody = invitationUpdateSchema;

      // verify the required parameter 'invitationId' is set
      if (invitationId === undefined || invitationId === null) {
        throw new Error("Missing the required parameter 'invitationId' when calling updatePublicInvitation");
      }

      // verify the required parameter 'invitationUpdateSchema' is set
      if (invitationUpdateSchema === undefined || invitationUpdateSchema === null) {
        throw new Error("Missing the required parameter 'invitationUpdateSchema' when calling updatePublicInvitation");
      }


      var pathParams = {
        'invitationId': invitationId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APP_NORMAL', 'OAUTH'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = PublicInvitationSchema;

      return this.apiClient.callApi(
        '/invitations/public/{invitationId}', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
