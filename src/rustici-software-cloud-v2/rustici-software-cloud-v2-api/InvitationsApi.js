/**
 * SCORM Cloud Rest API
 * REST API used for SCORM Cloud integrations.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['rustici-software-cloud-v2/ApiClient', 'rustici-software-cloud-v2/rustici-software-cloud-v2-model/BatchTagsSchema', 'rustici-software-cloud-v2/rustici-software-cloud-v2-model/CreatePrivateInvitationSchema', 'rustici-software-cloud-v2/rustici-software-cloud-v2-model/CreatePublicInvitationSchema', 'rustici-software-cloud-v2/rustici-software-cloud-v2-model/InvitationJobStatusSchema', 'rustici-software-cloud-v2/rustici-software-cloud-v2-model/InvitationSummaryList', 'rustici-software-cloud-v2/rustici-software-cloud-v2-model/InvitationSummarySchema', 'rustici-software-cloud-v2/rustici-software-cloud-v2-model/MessageSchema', 'rustici-software-cloud-v2/rustici-software-cloud-v2-model/PrivateInvitationList', 'rustici-software-cloud-v2/rustici-software-cloud-v2-model/PrivateInvitationSchema', 'rustici-software-cloud-v2/rustici-software-cloud-v2-model/PublicInvitationList', 'rustici-software-cloud-v2/rustici-software-cloud-v2-model/PublicInvitationSchema', 'rustici-software-cloud-v2/rustici-software-cloud-v2-model/TagListSchema', 'rustici-software-cloud-v2/rustici-software-cloud-v2-model/UserInvitationList'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../rustici-software-cloud-v2-model/BatchTagsSchema'), require('../rustici-software-cloud-v2-model/CreatePrivateInvitationSchema'), require('../rustici-software-cloud-v2-model/CreatePublicInvitationSchema'), require('../rustici-software-cloud-v2-model/InvitationJobStatusSchema'), require('../rustici-software-cloud-v2-model/InvitationSummaryList'), require('../rustici-software-cloud-v2-model/InvitationSummarySchema'), require('../rustici-software-cloud-v2-model/MessageSchema'), require('../rustici-software-cloud-v2-model/PrivateInvitationList'), require('../rustici-software-cloud-v2-model/PrivateInvitationSchema'), require('../rustici-software-cloud-v2-model/PublicInvitationList'), require('../rustici-software-cloud-v2-model/PublicInvitationSchema'), require('../rustici-software-cloud-v2-model/TagListSchema'), require('../rustici-software-cloud-v2-model/UserInvitationList'));
  } else {
    // Browser globals (root is window)
    if (!root.RusticiSoftwareCloudV2) {
      root.RusticiSoftwareCloudV2 = {};
    }
    root.RusticiSoftwareCloudV2.InvitationsApi = factory(root.RusticiSoftwareCloudV2.ApiClient, root.RusticiSoftwareCloudV2.BatchTagsSchema, root.RusticiSoftwareCloudV2.CreatePrivateInvitationSchema, root.RusticiSoftwareCloudV2.CreatePublicInvitationSchema, root.RusticiSoftwareCloudV2.InvitationJobStatusSchema, root.RusticiSoftwareCloudV2.InvitationSummaryList, root.RusticiSoftwareCloudV2.InvitationSummarySchema, root.RusticiSoftwareCloudV2.MessageSchema, root.RusticiSoftwareCloudV2.PrivateInvitationList, root.RusticiSoftwareCloudV2.PrivateInvitationSchema, root.RusticiSoftwareCloudV2.PublicInvitationList, root.RusticiSoftwareCloudV2.PublicInvitationSchema, root.RusticiSoftwareCloudV2.TagListSchema, root.RusticiSoftwareCloudV2.UserInvitationList);
  }
}(this, function(ApiClient, BatchTagsSchema, CreatePrivateInvitationSchema, CreatePublicInvitationSchema, InvitationJobStatusSchema, InvitationSummaryList, InvitationSummarySchema, MessageSchema, PrivateInvitationList, PrivateInvitationSchema, PublicInvitationList, PublicInvitationSchema, TagListSchema, UserInvitationList) {
  'use strict';

  /**
   * Invitations service.
   * @module rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi
   * @version 1.0.0
   */

  /**
   * Constructs a new InvitationsApi. 
   * @alias module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi
   * @class
   * @param {module:rustici-software-cloud-v2/ApiClient} apiClient Optional API client implementation to use,
   * default to {@link module:rustici-software-cloud-v2/ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the createPrivateInvitation operation.
     * @callback module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~createPrivateInvitationCallback
     * @param {String} error Error message, if any.
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/InvitationSummarySchema} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a private invitation to a course.
     * Create a private invitation to a course.  The provided information will be used to create new registrations for all of the provided e-mail addresses, and send asynchronously send e-mails to those addresses inviting them to the course.  To check the status of this process, a subsequent call to &#x60;/invitations/private/{invitationId}/status&#x60; must be made.
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/CreatePrivateInvitationSchema} privateInvitationRequest 
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~createPrivateInvitationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/InvitationSummarySchema}
     */
    this.createPrivateInvitation = function(privateInvitationRequest, callback) {
      var postBody = privateInvitationRequest;

      // verify the required parameter 'privateInvitationRequest' is set
      if (privateInvitationRequest == undefined || privateInvitationRequest == null) {
        throw new Error("Missing the required parameter 'privateInvitationRequest' when calling createPrivateInvitation");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APP_NORMAL', 'OAUTH'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = InvitationSummarySchema;

      return this.apiClient.callApi(
        '/invitations/private', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the createPublicInvitation operation.
     * @callback module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~createPublicInvitationCallback
     * @param {String} error Error message, if any.
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/PublicInvitationSchema} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a publicly accessible invitation to a course.
     * Create a publicly accessible invitation to a course.
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/CreatePublicInvitationSchema} publicInvitationRequest A description of the public invitation to be created.
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~createPublicInvitationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/PublicInvitationSchema}
     */
    this.createPublicInvitation = function(publicInvitationRequest, callback) {
      var postBody = publicInvitationRequest;

      // verify the required parameter 'publicInvitationRequest' is set
      if (publicInvitationRequest == undefined || publicInvitationRequest == null) {
        throw new Error("Missing the required parameter 'publicInvitationRequest' when calling createPublicInvitation");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APP_NORMAL', 'OAUTH'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = PublicInvitationSchema;

      return this.apiClient.callApi(
        '/invitations/public', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteInvitationTags operation.
     * @callback module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~deleteInvitationTagsCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete the tags for this invitation 
     * Delete the tags for this invitation 
     * @param {String} invitationId invitation id
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/TagListSchema} tags 
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~deleteInvitationTagsCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.deleteInvitationTags = function(invitationId, tags, callback) {
      var postBody = tags;

      // verify the required parameter 'invitationId' is set
      if (invitationId == undefined || invitationId == null) {
        throw new Error("Missing the required parameter 'invitationId' when calling deleteInvitationTags");
      }

      // verify the required parameter 'tags' is set
      if (tags == undefined || tags == null) {
        throw new Error("Missing the required parameter 'tags' when calling deleteInvitationTags");
      }


      var pathParams = {
        'invitationId': invitationId
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APP_NORMAL', 'OAUTH'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/invitations/{invitationId}/tags', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getAllInvitations operation.
     * @callback module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~getAllInvitationsCallback
     * @param {String} error Error message, if any.
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/InvitationSummaryList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a list of invitation summaries.
     * Get a summary of all the invitations for an appId, both public and private.
     * @param {Object} opts Optional parameters
     * @param {String} opts.courseId Limit the results to invitations with courseIds that match the filter.
     * @param {Date} opts.since Only items updated since the specified ISO 8601 TimeStamp (inclusive) are included. If a time zone is not specified, UTC time zone will be used.
     * @param {Date} opts.until Only items updated before the specified ISO 8601 TimeStamp (inclusive) are included. If a time zone is not specified, UTC time zone will be used.
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/String} opts.datetimeFilter A string describing what the since/until parameters will be applied to. Options are: &#39;created&#39; or &#39;updated&#39;.  If not provided, it will default to &#x60;updated&#x60;. (default to updated)
     * @param {Array.<String>} opts.tags 
     * @param {String} opts.more Value for this parameter will be provided in the &#39;more&#39; property of registration lists, where needed. An opaque value, construction and parsing may change without notice.
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~getAllInvitationsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/InvitationSummaryList}
     */
    this.getAllInvitations = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'courseId': opts['courseId'],
        'since': opts['since'],
        'until': opts['until'],
        'datetimeFilter': opts['datetimeFilter'],
        'tags': this.apiClient.buildCollectionParam(opts['tags'], 'csv'),
        'more': opts['more']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APP_NORMAL', 'OAUTH'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = InvitationSummaryList;

      return this.apiClient.callApi(
        '/invitations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getInvitationTags operation.
     * @callback module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~getInvitationTagsCallback
     * @param {String} error Error message, if any.
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/TagListSchema} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the tags for this invitation 
     * Get the tags for this invitation 
     * @param {String} invitationId invitation id
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~getInvitationTagsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/TagListSchema}
     */
    this.getInvitationTags = function(invitationId, callback) {
      var postBody = null;

      // verify the required parameter 'invitationId' is set
      if (invitationId == undefined || invitationId == null) {
        throw new Error("Missing the required parameter 'invitationId' when calling getInvitationTags");
      }


      var pathParams = {
        'invitationId': invitationId
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APP_NORMAL', 'OAUTH'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = TagListSchema;

      return this.apiClient.callApi(
        '/invitations/{invitationId}/tags', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getPrivateInvitation operation.
     * @callback module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~getPrivateInvitationCallback
     * @param {String} error Error message, if any.
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/PrivateInvitationSchema} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a information about a private invitation.
     * Get a information about a private invitation.
     * @param {String} invitationId invitation id
     * @param {Object} opts Optional parameters
     * @param {Boolean} opts.includeRegistrationCount Include the registration count in the results (default to false)
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~getPrivateInvitationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/PrivateInvitationSchema}
     */
    this.getPrivateInvitation = function(invitationId, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'invitationId' is set
      if (invitationId == undefined || invitationId == null) {
        throw new Error("Missing the required parameter 'invitationId' when calling getPrivateInvitation");
      }


      var pathParams = {
        'invitationId': invitationId
      };
      var queryParams = {
        'includeRegistrationCount': opts['includeRegistrationCount']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APP_NORMAL', 'OAUTH'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = PrivateInvitationSchema;

      return this.apiClient.callApi(
        '/invitations/private/{invitationId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getPrivateInvitationJobStatus operation.
     * @callback module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~getPrivateInvitationJobStatusCallback
     * @param {String} error Error message, if any.
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/InvitationJobStatusSchema} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the status of an invitation job.
     * Get the status of a job to send out private invitations.
     * @param {String} invitationId invitation id
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~getPrivateInvitationJobStatusCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/InvitationJobStatusSchema}
     */
    this.getPrivateInvitationJobStatus = function(invitationId, callback) {
      var postBody = null;

      // verify the required parameter 'invitationId' is set
      if (invitationId == undefined || invitationId == null) {
        throw new Error("Missing the required parameter 'invitationId' when calling getPrivateInvitationJobStatus");
      }


      var pathParams = {
        'invitationId': invitationId
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APP_NORMAL', 'OAUTH'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = InvitationJobStatusSchema;

      return this.apiClient.callApi(
        '/invitations/private/{invitationId}/jobStatus', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getPrivateInvitations operation.
     * @callback module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~getPrivateInvitationsCallback
     * @param {String} error Error message, if any.
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/PrivateInvitationList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a list of all private invitations.
     * Retrieves a list of all private invitations, optionally filtered by the given parameters.
     * @param {Object} opts Optional parameters
     * @param {String} opts.courseId Limit the results to invitations with courseIds that match the filter.
     * @param {Date} opts.since Only items updated since the specified ISO 8601 TimeStamp (inclusive) are included. If a time zone is not specified, UTC time zone will be used.
     * @param {Date} opts.until Only items updated before the specified ISO 8601 TimeStamp (inclusive) are included. If a time zone is not specified, UTC time zone will be used.
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/String} opts.datetimeFilter A string describing what the since/until parameters will be applied to. Options are: &#39;created&#39; or &#39;updated&#39;.  If not provided, it will default to &#x60;updated&#x60;. (default to updated)
     * @param {Array.<String>} opts.tags 
     * @param {String} opts.more Value for this parameter will be provided in the &#39;more&#39; property of registration lists, where needed. An opaque value, construction and parsing may change without notice.
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~getPrivateInvitationsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/PrivateInvitationList}
     */
    this.getPrivateInvitations = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'courseId': opts['courseId'],
        'since': opts['since'],
        'until': opts['until'],
        'datetimeFilter': opts['datetimeFilter'],
        'tags': this.apiClient.buildCollectionParam(opts['tags'], 'csv'),
        'more': opts['more']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APP_NORMAL', 'OAUTH'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = PrivateInvitationList;

      return this.apiClient.callApi(
        '/invitations/private', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getPrivateUserInvitations operation.
     * @callback module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~getPrivateUserInvitationsCallback
     * @param {String} error Error message, if any.
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/UserInvitationList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a list of user invitations.
     * Get a list of objects which contain the specific information about each user to whom this invitation was sent.
     * @param {String} invitationId invitation id
     * @param {Object} opts Optional parameters
     * @param {Date} opts.since Only items updated since the specified ISO 8601 TimeStamp (inclusive) are included. If a time zone is not specified, UTC time zone will be used.
     * @param {Date} opts.until Only items updated before the specified ISO 8601 TimeStamp (inclusive) are included. If a time zone is not specified, UTC time zone will be used.
     * @param {Boolean} opts.includeRegistrationReport 
     * @param {String} opts.more Value for this parameter will be provided in the &#39;more&#39; property of registration lists, where needed. An opaque value, construction and parsing may change without notice.
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~getPrivateUserInvitationsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/UserInvitationList}
     */
    this.getPrivateUserInvitations = function(invitationId, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'invitationId' is set
      if (invitationId == undefined || invitationId == null) {
        throw new Error("Missing the required parameter 'invitationId' when calling getPrivateUserInvitations");
      }


      var pathParams = {
        'invitationId': invitationId
      };
      var queryParams = {
        'since': opts['since'],
        'until': opts['until'],
        'includeRegistrationReport': opts['includeRegistrationReport'],
        'more': opts['more']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APP_NORMAL', 'OAUTH'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = UserInvitationList;

      return this.apiClient.callApi(
        '/invitations/private/{invitationId}/userInvitations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getPublicInvitation operation.
     * @callback module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~getPublicInvitationCallback
     * @param {String} error Error message, if any.
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/PublicInvitationSchema} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a information about a public invitation.
     * Get a information about a public invitation.
     * @param {String} invitationId invitation id
     * @param {Object} opts Optional parameters
     * @param {Boolean} opts.includeRegistrationCount Include the registration count in the results (default to false)
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~getPublicInvitationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/PublicInvitationSchema}
     */
    this.getPublicInvitation = function(invitationId, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'invitationId' is set
      if (invitationId == undefined || invitationId == null) {
        throw new Error("Missing the required parameter 'invitationId' when calling getPublicInvitation");
      }


      var pathParams = {
        'invitationId': invitationId
      };
      var queryParams = {
        'includeRegistrationCount': opts['includeRegistrationCount']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APP_NORMAL', 'OAUTH'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = PublicInvitationSchema;

      return this.apiClient.callApi(
        '/invitations/public/{invitationId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getPublicInvitations operation.
     * @callback module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~getPublicInvitationsCallback
     * @param {String} error Error message, if any.
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/PublicInvitationList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a list of all public invitations.
     * Retrieves a list of all public invitations, optionally filtered by the given parameters.
     * @param {Object} opts Optional parameters
     * @param {String} opts.courseId Limit the results to invitations with courseIds that match the filter.
     * @param {Date} opts.since Only items updated since the specified ISO 8601 TimeStamp (inclusive) are included. If a time zone is not specified, UTC time zone will be used.
     * @param {Date} opts.until Only items updated before the specified ISO 8601 TimeStamp (inclusive) are included. If a time zone is not specified, UTC time zone will be used.
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/String} opts.datetimeFilter A string describing what the since/until parameters will be applied to. Options are: &#39;created&#39; or &#39;updated&#39;.  If not provided, it will default to &#x60;updated&#x60;. (default to updated)
     * @param {Array.<String>} opts.tags 
     * @param {String} opts.more Value for this parameter will be provided in the &#39;more&#39; property of registration lists, where needed. An opaque value, construction and parsing may change without notice.
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~getPublicInvitationsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/PublicInvitationList}
     */
    this.getPublicInvitations = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'courseId': opts['courseId'],
        'since': opts['since'],
        'until': opts['until'],
        'datetimeFilter': opts['datetimeFilter'],
        'tags': this.apiClient.buildCollectionParam(opts['tags'], 'csv'),
        'more': opts['more']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APP_NORMAL', 'OAUTH'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = PublicInvitationList;

      return this.apiClient.callApi(
        '/invitations/public', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getPublicUserInvitations operation.
     * @callback module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~getPublicUserInvitationsCallback
     * @param {String} error Error message, if any.
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/UserInvitationList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a list of user invitations.
     * Get a list of objects which contain the specific information about each user who visited the invitation link.
     * @param {String} invitationId invitation id
     * @param {Object} opts Optional parameters
     * @param {Date} opts.since Only items updated since the specified ISO 8601 TimeStamp (inclusive) are included. If a time zone is not specified, UTC time zone will be used.
     * @param {Date} opts.until Only items updated before the specified ISO 8601 TimeStamp (inclusive) are included. If a time zone is not specified, UTC time zone will be used.
     * @param {Boolean} opts.includeRegistrationReport 
     * @param {String} opts.more Value for this parameter will be provided in the &#39;more&#39; property of registration lists, where needed. An opaque value, construction and parsing may change without notice.
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~getPublicUserInvitationsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/UserInvitationList}
     */
    this.getPublicUserInvitations = function(invitationId, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'invitationId' is set
      if (invitationId == undefined || invitationId == null) {
        throw new Error("Missing the required parameter 'invitationId' when calling getPublicUserInvitations");
      }


      var pathParams = {
        'invitationId': invitationId
      };
      var queryParams = {
        'since': opts['since'],
        'until': opts['until'],
        'includeRegistrationReport': opts['includeRegistrationReport'],
        'more': opts['more']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APP_NORMAL', 'OAUTH'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = UserInvitationList;

      return this.apiClient.callApi(
        '/invitations/public/{invitationId}/userInvitations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the putInvitationTags operation.
     * @callback module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~putInvitationTagsCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Set the tags for this invitation 
     * Set the tags for this invitation 
     * @param {String} invitationId invitation id
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/TagListSchema} tags 
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~putInvitationTagsCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.putInvitationTags = function(invitationId, tags, callback) {
      var postBody = tags;

      // verify the required parameter 'invitationId' is set
      if (invitationId == undefined || invitationId == null) {
        throw new Error("Missing the required parameter 'invitationId' when calling putInvitationTags");
      }

      // verify the required parameter 'tags' is set
      if (tags == undefined || tags == null) {
        throw new Error("Missing the required parameter 'tags' when calling putInvitationTags");
      }


      var pathParams = {
        'invitationId': invitationId
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APP_NORMAL', 'OAUTH'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/invitations/{invitationId}/tags', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the putInvitationTagsBatch operation.
     * @callback module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~putInvitationTagsBatchCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Sets all of the provided tags on all of the provided invitations 
     * Sets all of the provided tags on all of the provided invitations 
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/BatchTagsSchema} batch Object representing an array of ids to apply an array of tags to.
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~putInvitationTagsBatchCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.putInvitationTagsBatch = function(batch, callback) {
      var postBody = batch;

      // verify the required parameter 'batch' is set
      if (batch == undefined || batch == null) {
        throw new Error("Missing the required parameter 'batch' when calling putInvitationTagsBatch");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APP_NORMAL', 'OAUTH'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/invitations/tags', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the updatePrivateInvitation operation.
     * @callback module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~updatePrivateInvitationCallback
     * @param {String} error Error message, if any.
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/PrivateInvitationSchema} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update attributes of this invitation.
     * Updates certain attributes of this invitation, and returns the invitation its new state.  The following attributes can be updated: - allowLaunch - invitationEmail - postBack - expirationDate NOTE: Any attributes not in the above list will not be considered for update.
     * @param {String} invitationId invitation id
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/PrivateInvitationSchema} invitationUpdateSchema A PrivateInvitationSchema with values to update.  This can be a sparse schema only containing the values to be updated.  Any value not allowed for update will be ignored.
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~updatePrivateInvitationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/PrivateInvitationSchema}
     */
    this.updatePrivateInvitation = function(invitationId, invitationUpdateSchema, callback) {
      var postBody = invitationUpdateSchema;

      // verify the required parameter 'invitationId' is set
      if (invitationId == undefined || invitationId == null) {
        throw new Error("Missing the required parameter 'invitationId' when calling updatePrivateInvitation");
      }

      // verify the required parameter 'invitationUpdateSchema' is set
      if (invitationUpdateSchema == undefined || invitationUpdateSchema == null) {
        throw new Error("Missing the required parameter 'invitationUpdateSchema' when calling updatePrivateInvitation");
      }


      var pathParams = {
        'invitationId': invitationId
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APP_NORMAL', 'OAUTH'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = PrivateInvitationSchema;

      return this.apiClient.callApi(
        '/invitations/private/{invitationId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the updatePublicInvitation operation.
     * @callback module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~updatePublicInvitationCallback
     * @param {String} error Error message, if any.
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/PublicInvitationSchema} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update attributes of this invitation.
     * Updates certain attributes of this invitation, and returns the invitation its new state.  The following attributes can be updated: - allowLaunch - allowNewRegistrations - postBack - expirationDate - registrationCap NOTE: Any attributes not in the above list will not be considered for update.
     * @param {String} invitationId invitation id
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/PublicInvitationSchema} invitationUpdateSchema A PublicInvitationSchema with values to update.  This can be a sparse schema only containing the values to be updated.  Any value not allowed for update will be ignored.
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/InvitationsApi~updatePublicInvitationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/PublicInvitationSchema}
     */
    this.updatePublicInvitation = function(invitationId, invitationUpdateSchema, callback) {
      var postBody = invitationUpdateSchema;

      // verify the required parameter 'invitationId' is set
      if (invitationId == undefined || invitationId == null) {
        throw new Error("Missing the required parameter 'invitationId' when calling updatePublicInvitation");
      }

      // verify the required parameter 'invitationUpdateSchema' is set
      if (invitationUpdateSchema == undefined || invitationUpdateSchema == null) {
        throw new Error("Missing the required parameter 'invitationUpdateSchema' when calling updatePublicInvitation");
      }


      var pathParams = {
        'invitationId': invitationId
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APP_NORMAL', 'OAUTH'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = PublicInvitationSchema;

      return this.apiClient.callApi(
        '/invitations/public/{invitationId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
