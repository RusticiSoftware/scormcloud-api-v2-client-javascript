/**
 * SCORM Cloud Rest API
 * REST API used for SCORM Cloud integrations.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['rustici-software-cloud-v2/ApiClient', 'rustici-software-cloud-v2/rustici-software-cloud-v2-model/ApplicationToken', 'rustici-software-cloud-v2/rustici-software-cloud-v2-model/MessageSchema'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../rustici-software-cloud-v2-model/ApplicationToken'), require('../rustici-software-cloud-v2-model/MessageSchema'));
  } else {
    // Browser globals (root is window)
    if (!root.RusticiSoftwareCloudV2) {
      root.RusticiSoftwareCloudV2 = {};
    }
    root.RusticiSoftwareCloudV2.AuthenticationApi = factory(root.RusticiSoftwareCloudV2.ApiClient, root.RusticiSoftwareCloudV2.ApplicationToken, root.RusticiSoftwareCloudV2.MessageSchema);
  }
}(this, function(ApiClient, ApplicationToken, MessageSchema) {
  'use strict';

  /**
   * Authentication service.
   * @module rustici-software-cloud-v2/rustici-software-cloud-v2-api/AuthenticationApi
   * @version 1.0.0
   */

  /**
   * Constructs a new AuthenticationApi. 
   * @alias module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/AuthenticationApi
   * @class
   * @param {module:rustici-software-cloud-v2/ApiClient} apiClient Optional API client implementation to use,
   * default to {@link module:rustici-software-cloud-v2/ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the getAppToken operation.
     * @callback module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/AuthenticationApi~getAppTokenCallback
     * @param {String} error Error message, if any.
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/ApplicationToken} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Authenticates for a oauth token
     * Creates, signs and returns an OAuth2 token based on the provided permissions, if the credentials used to request the token have the permissions being requested.  &gt;Note:  &gt;The token is not stored and therefore can not be modified or deleted. The requested permissions are encoded in the token which is then signed. As long as the secret used to create it is not changed the token will be valid until it expires. 
     * @param {String} scope 
     * @param {Object} opts Optional parameters
     * @param {Number} opts.expiration  (default to 300)
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/AuthenticationApi~getAppTokenCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/ApplicationToken}
     */
    this.getAppToken = function(scope, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'scope' is set
      if (scope == undefined || scope == null) {
        throw new Error("Missing the required parameter 'scope' when calling getAppToken");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
        'scope': scope,
        'expiration': opts['expiration']
      };

      var authNames = ['APP_NORMAL'];
      var contentTypes = ['application/x-www-form-urlencoded'];
      var accepts = ['application/json'];
      var returnType = ApplicationToken;

      return this.apiClient.callApi(
        '/oauth/authenticate/application/token', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
