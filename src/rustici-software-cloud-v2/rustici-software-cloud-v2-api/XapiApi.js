/*
 * SCORM Cloud Rest API
 * REST API used for SCORM Cloud integrations.
 *
 * OpenAPI spec version: 2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.12
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['rustici-software-cloud-v2/ApiClient', 'rustici-software-cloud-v2/rustici-software-cloud-v2-model/MessageSchema', 'rustici-software-cloud-v2/rustici-software-cloud-v2-model/StringResultSchema', 'rustici-software-cloud-v2/rustici-software-cloud-v2-model/XapiCredentialPostSchema', 'rustici-software-cloud-v2/rustici-software-cloud-v2-model/XapiCredentialSchema', 'rustici-software-cloud-v2/rustici-software-cloud-v2-model/XapiCredentialsListSchema', 'rustici-software-cloud-v2/rustici-software-cloud-v2-model/XapiStatementPipeListSchema', 'rustici-software-cloud-v2/rustici-software-cloud-v2-model/XapiStatementPipePostSchema', 'rustici-software-cloud-v2/rustici-software-cloud-v2-model/XapiStatementPipePutSchema', 'rustici-software-cloud-v2/rustici-software-cloud-v2-model/XapiStatementPipeSchema'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../rustici-software-cloud-v2-model/MessageSchema'), require('../rustici-software-cloud-v2-model/StringResultSchema'), require('../rustici-software-cloud-v2-model/XapiCredentialPostSchema'), require('../rustici-software-cloud-v2-model/XapiCredentialSchema'), require('../rustici-software-cloud-v2-model/XapiCredentialsListSchema'), require('../rustici-software-cloud-v2-model/XapiStatementPipeListSchema'), require('../rustici-software-cloud-v2-model/XapiStatementPipePostSchema'), require('../rustici-software-cloud-v2-model/XapiStatementPipePutSchema'), require('../rustici-software-cloud-v2-model/XapiStatementPipeSchema'));
  } else {
    // Browser globals (root is window)
    if (!root.RusticiSoftwareCloudV2) {
      root.RusticiSoftwareCloudV2 = {};
    }
    root.RusticiSoftwareCloudV2.XapiApi = factory(root.RusticiSoftwareCloudV2.ApiClient, root.RusticiSoftwareCloudV2.MessageSchema, root.RusticiSoftwareCloudV2.StringResultSchema, root.RusticiSoftwareCloudV2.XapiCredentialPostSchema, root.RusticiSoftwareCloudV2.XapiCredentialSchema, root.RusticiSoftwareCloudV2.XapiCredentialsListSchema, root.RusticiSoftwareCloudV2.XapiStatementPipeListSchema, root.RusticiSoftwareCloudV2.XapiStatementPipePostSchema, root.RusticiSoftwareCloudV2.XapiStatementPipePutSchema, root.RusticiSoftwareCloudV2.XapiStatementPipeSchema);
  }
}(this, function(ApiClient, MessageSchema, StringResultSchema, XapiCredentialPostSchema, XapiCredentialSchema, XapiCredentialsListSchema, XapiStatementPipeListSchema, XapiStatementPipePostSchema, XapiStatementPipePutSchema, XapiStatementPipeSchema) {
  'use strict';

  /**
   * Xapi service.
   * @module rustici-software-cloud-v2/rustici-software-cloud-v2-api/XapiApi
   * @version 2.0.1
   */

  /**
   * Constructs a new XapiApi. 
   * @alias module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/XapiApi
   * @class
   * @param {module:rustici-software-cloud-v2/ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:rustici-software-cloud-v2/ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the createStatementPipe operation.
     * @callback module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/XapiApi~createStatementPipeCallback
     * @param {String} error Error message, if any.
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/StringResultSchema} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create an xAPI Statement Pipe 
     * Creates an xAPI statement pipe.  >**Note:** >This method is asynchronous.  A returned success status indicates a background process has been started, but there will still be a delay before the creation of the xAPI statement pipe takes place. 
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/XapiStatementPipePostSchema} xapiStatementPipe 
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/XapiApi~createStatementPipeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/StringResultSchema}
     */
    this.createStatementPipe = function(xapiStatementPipe, callback) {
      var postBody = xapiStatementPipe;

      // verify the required parameter 'xapiStatementPipe' is set
      if (xapiStatementPipe === undefined || xapiStatementPipe === null) {
        throw new Error("Missing the required parameter 'xapiStatementPipe' when calling createStatementPipe");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APP_NORMAL', 'OAUTH'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = StringResultSchema;

      return this.apiClient.callApi(
        '/xapi/statementPipes', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the createXapiCredential operation.
     * @callback module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/XapiApi~createXapiCredentialCallback
     * @param {String} error Error message, if any.
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/StringResultSchema} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create xAPI Credentials 
     * Creates an xAPI credential combination from the provided secret and a generated ID. 
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/XapiCredentialPostSchema} xapiCredential 
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/XapiApi~createXapiCredentialCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/StringResultSchema}
     */
    this.createXapiCredential = function(xapiCredential, callback) {
      var postBody = xapiCredential;

      // verify the required parameter 'xapiCredential' is set
      if (xapiCredential === undefined || xapiCredential === null) {
        throw new Error("Missing the required parameter 'xapiCredential' when calling createXapiCredential");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APP_NORMAL', 'OAUTH'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = StringResultSchema;

      return this.apiClient.callApi(
        '/xapi/credentials', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteStatementPipe operation.
     * @callback module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/XapiApi~deleteStatementPipeCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete an xAPI Statement Pipe 
     * Deletes the specified xAPI statement pipe  >**Note:** >This method is asynchronous.  A returned success status indicates a background process has been started, but there will still be a delay before the deletion takes place.  Recreating a statement pipe with the same ID too quickly could cause the statement pipe to end up in a faulty state. 
     * @param {String} statementPipeId 
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/XapiApi~deleteStatementPipeCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.deleteStatementPipe = function(statementPipeId, callback) {
      var postBody = null;

      // verify the required parameter 'statementPipeId' is set
      if (statementPipeId === undefined || statementPipeId === null) {
        throw new Error("Missing the required parameter 'statementPipeId' when calling deleteStatementPipe");
      }


      var pathParams = {
        'statementPipeId': statementPipeId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APP_NORMAL', 'OAUTH'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/xapi/statementPipes/{statementPipeId}', 'DELETE',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteXapiCredential operation.
     * @callback module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/XapiApi~deleteXapiCredentialCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete xAPI Credentials 
     * Deletes the specified xAPI credentials. 
     * @param {String} xapiCredentialId 
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/XapiApi~deleteXapiCredentialCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.deleteXapiCredential = function(xapiCredentialId, callback) {
      var postBody = null;

      // verify the required parameter 'xapiCredentialId' is set
      if (xapiCredentialId === undefined || xapiCredentialId === null) {
        throw new Error("Missing the required parameter 'xapiCredentialId' when calling deleteXapiCredential");
      }


      var pathParams = {
        'xapiCredentialId': xapiCredentialId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APP_NORMAL', 'OAUTH'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/xapi/credentials/{xapiCredentialId}', 'DELETE',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getStatementPipe operation.
     * @callback module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/XapiApi~getStatementPipeCallback
     * @param {String} error Error message, if any.
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/XapiStatementPipeSchema} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get detailed information about an xAPI Statement Pipe 
     * Returns detailed information about the xAPI pipe.  This includes source and target urls, the last time a statement was successfully forwarded, and how many attempts have been made to send data to the target url. 
     * @param {String} statementPipeId 
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/XapiApi~getStatementPipeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/XapiStatementPipeSchema}
     */
    this.getStatementPipe = function(statementPipeId, callback) {
      var postBody = null;

      // verify the required parameter 'statementPipeId' is set
      if (statementPipeId === undefined || statementPipeId === null) {
        throw new Error("Missing the required parameter 'statementPipeId' when calling getStatementPipe");
      }


      var pathParams = {
        'statementPipeId': statementPipeId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APP_NORMAL', 'OAUTH'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = XapiStatementPipeSchema;

      return this.apiClient.callApi(
        '/xapi/statementPipes/{statementPipeId}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getStatementPipes operation.
     * @callback module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/XapiApi~getStatementPipesCallback
     * @param {String} error Error message, if any.
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/XapiStatementPipeListSchema} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a list of xAPI Statement Pipes 
     * Returns a list of all xAPI statement pipes. 
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/XapiApi~getStatementPipesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/XapiStatementPipeListSchema}
     */
    this.getStatementPipes = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APP_NORMAL', 'OAUTH'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = XapiStatementPipeListSchema;

      return this.apiClient.callApi(
        '/xapi/statementPipes', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getXapiCredential operation.
     * @callback module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/XapiApi~getXapiCredentialCallback
     * @param {String} error Error message, if any.
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/XapiCredentialSchema} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get detailed information about the xAPI Credentials 
     * Returns detailed information about the xAPI credentials.  This includes the id (username), secret (password), permissions, and whether or not the credentials are enabled. 
     * @param {String} xapiCredentialId 
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/XapiApi~getXapiCredentialCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/XapiCredentialSchema}
     */
    this.getXapiCredential = function(xapiCredentialId, callback) {
      var postBody = null;

      // verify the required parameter 'xapiCredentialId' is set
      if (xapiCredentialId === undefined || xapiCredentialId === null) {
        throw new Error("Missing the required parameter 'xapiCredentialId' when calling getXapiCredential");
      }


      var pathParams = {
        'xapiCredentialId': xapiCredentialId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APP_NORMAL', 'OAUTH'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = XapiCredentialSchema;

      return this.apiClient.callApi(
        '/xapi/credentials/{xapiCredentialId}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getXapiCredentials operation.
     * @callback module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/XapiApi~getXapiCredentialsCallback
     * @param {String} error Error message, if any.
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/XapiCredentialsListSchema} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a list of xAPI Credentials 
     * Returns a list of xAPI credentials.  Can be filtered using the request parameters to provide a subset of results.  >**Note:** >This request is paginated and will only provide a limited amount of resources at a time.  If there are more results to be collected, a `more` token provided with the response which can be passed to get the next page of results.  When passing this token, no other filter parameters can be sent as part of the request.  The resources will continue to respect the filters passed in by the original request. 
     * @param {Object} opts Optional parameters
     * @param {Date} opts.since Filter by ISO 8601 TimeStamp inclusive (defaults to UTC)
     * @param {Date} opts.until Filter by ISO 8601 TimeStamp inclusive (defaults to UTC)
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/String} opts.datetimeFilter Specifies field that `since` and `until` parameters are applied against (default to updated)
     * @param {String} opts.filter Optional string which filters results by a specified field (described by filterBy).
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/String} opts.filterBy Optional enum parameter for specifying the field on which to run the filter.  (default to credential_id)
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/String} opts.orderBy Optional enum parameter for specifying the field and order by which to sort the results.  (default to updated_asc)
     * @param {String} opts.more Pagination token returned as `more` property of multi page list requests
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/XapiApi~getXapiCredentialsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/XapiCredentialsListSchema}
     */
    this.getXapiCredentials = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'since': opts['since'],
        'until': opts['until'],
        'datetimeFilter': opts['datetimeFilter'],
        'filter': opts['filter'],
        'filterBy': opts['filterBy'],
        'orderBy': opts['orderBy'],
        'more': opts['more'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APP_NORMAL', 'OAUTH'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = XapiCredentialsListSchema;

      return this.apiClient.callApi(
        '/xapi/credentials', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the setStatementPipe operation.
     * @callback module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/XapiApi~setStatementPipeCallback
     * @param {String} error Error message, if any.
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/StringResultSchema} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create or update an xAPI Statement Pipe 
     * Creates or updates information about the xAPI statement pipe.  - If the xAPI statement pipe is instead being updated, the pipe will start over and forward any statements it finds, even if it had already forwarded those statements.  If the pipe being edited is currently being processed, then this request will fail with a status code of 409.  >**Note:** >This method is asynchronous.  A returned success status indicates a background process has been started, but there will still be a delay before the creation of the xAPI statement pipe takes place. 
     * @param {String} statementPipeId 
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/XapiStatementPipePutSchema} xapiStatementPipe 
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/XapiApi~setStatementPipeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/StringResultSchema}
     */
    this.setStatementPipe = function(statementPipeId, xapiStatementPipe, callback) {
      var postBody = xapiStatementPipe;

      // verify the required parameter 'statementPipeId' is set
      if (statementPipeId === undefined || statementPipeId === null) {
        throw new Error("Missing the required parameter 'statementPipeId' when calling setStatementPipe");
      }

      // verify the required parameter 'xapiStatementPipe' is set
      if (xapiStatementPipe === undefined || xapiStatementPipe === null) {
        throw new Error("Missing the required parameter 'xapiStatementPipe' when calling setStatementPipe");
      }


      var pathParams = {
        'statementPipeId': statementPipeId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APP_NORMAL', 'OAUTH'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = StringResultSchema;

      return this.apiClient.callApi(
        '/xapi/statementPipes/{statementPipeId}', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the setXapiCredential operation.
     * @callback module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/XapiApi~setXapiCredentialCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create or update xAPI Credentials 
     * Creates or updates information about the xAPI credentials. 
     * @param {String} xapiCredentialId 
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/XapiCredentialPostSchema} xapiCredential 
     * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-api/XapiApi~setXapiCredentialCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.setXapiCredential = function(xapiCredentialId, xapiCredential, callback) {
      var postBody = xapiCredential;

      // verify the required parameter 'xapiCredentialId' is set
      if (xapiCredentialId === undefined || xapiCredentialId === null) {
        throw new Error("Missing the required parameter 'xapiCredentialId' when calling setXapiCredential");
      }

      // verify the required parameter 'xapiCredential' is set
      if (xapiCredential === undefined || xapiCredential === null) {
        throw new Error("Missing the required parameter 'xapiCredential' when calling setXapiCredential");
      }


      var pathParams = {
        'xapiCredentialId': xapiCredentialId
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APP_NORMAL', 'OAUTH'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/xapi/credentials/{xapiCredentialId}', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
