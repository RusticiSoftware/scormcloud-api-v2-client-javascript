/*
 * SCORM Cloud Rest API
 * REST API used for SCORM Cloud integrations.
 *
 * OpenAPI spec version: 2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.27
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['rustici-software-cloud-v2/ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.RusticiSoftwareCloudV2) {
      root.RusticiSoftwareCloudV2 = {};
    }
    root.RusticiSoftwareCloudV2.PostBackSchema = factory(root.RusticiSoftwareCloudV2.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The PostBackSchema model module.
   * @module rustici-software-cloud-v2/rustici-software-cloud-v2-model/PostBackSchema
   */

  /**
   * Constructs a new <code>PostBackSchema</code>.
   * @alias module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/PostBackSchema
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>PostBackSchema</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/PostBackSchema} obj Optional instance to populate.
   * @return {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/PostBackSchema} The populated <code>PostBackSchema</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('url'))
        obj.url = ApiClient.convertToType(data['url'], 'String');
      if (data.hasOwnProperty('authType'))
        obj.authType = ApiClient.convertToType(data['authType'], 'String');
      if (data.hasOwnProperty('userName'))
        obj.userName = ApiClient.convertToType(data['userName'], 'String');
      if (data.hasOwnProperty('password'))
        obj.password = ApiClient.convertToType(data['password'], 'String');
      if (data.hasOwnProperty('resultsFormat'))
        obj.resultsFormat = ApiClient.convertToType(data['resultsFormat'], 'String');
      if (data.hasOwnProperty('legacy'))
        obj.legacy = ApiClient.convertToType(data['legacy'], 'Boolean');
    }
    return obj;
  }

  /**
   * @member {String} url
   */
  exports.prototype.url = undefined;

  /**
   * Optional parameter to specify how to authorize against the given postbackurl, can be 'form' or 'httpbasic'. If form authentication, the username and password for authentication are submitted as form fields 'username' and 'password', and the registration data as the form field 'data'. If httpbasic authentication is used, the username and password are placed in the standard Authorization HTTP header, and the registration data is the body of the message (sent as text/xml content type). This field is set to 'form' by default.
   * @member {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/PostBackSchema.AuthTypeEnum} authType
   * @default 'UNDEFINED'
   */
  exports.prototype.authType = 'UNDEFINED';

  /**
   * The user name to be used in authorizing the postback of data to the URL specified by postback url.
   * @member {String} userName
   */
  exports.prototype.userName = undefined;

  /**
   * The password to be used in authorizing the postback of data to the URL specified by postback url.
   * @member {String} password
   */
  exports.prototype.password = undefined;

  /**
   * This parameter allows you to specify a level of detail in the information that is posted back while the course is being taken. It may be one of three values: 'course' (course summary), 'activity' (activity summary, or 'full' (full detail), and is set to 'course' by default. The information will be posted as xml, and the format of that xml is specified below under the method 'getRegistrationResult'
   * @member {module:rustici-software-cloud-v2/rustici-software-cloud-v2-model/PostBackSchema.ResultsFormatEnum} resultsFormat
   * @default 'UNDEFINED'
   */
  exports.prototype.resultsFormat = 'UNDEFINED';

  /**
   * This paramenter is ONLY used for backwards compatibility with XML postback implementations.  You probably shouldn't need to use this unless you're currently transitioning from the V1 api to the V2 api and already have existing XML postback logic in your application, but have not yet built out JSON postback logic.  If a registration is created with the V2 api we will assume that you're expecting JSON results unless otherwise specified. 
   * @member {Boolean} legacy
   */
  exports.prototype.legacy = undefined;



  /**
   * Allowed values for the <code>authType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.AuthTypeEnum = {
    /**
     * value: "UNDEFINED"
     * @const
     */
    UNDEFINED: "UNDEFINED",

    /**
     * value: "FORM"
     * @const
     */
    FORM: "FORM",

    /**
     * value: "HTTPBASIC"
     * @const
     */
    HTTPBASIC: "HTTPBASIC"
  };


  /**
   * Allowed values for the <code>resultsFormat</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ResultsFormatEnum = {
    /**
     * value: "UNDEFINED"
     * @const
     */
    UNDEFINED: "UNDEFINED",

    /**
     * value: "COURSE"
     * @const
     */
    COURSE: "COURSE",

    /**
     * value: "ACTIVITY"
     * @const
     */
    ACTIVITY: "ACTIVITY",

    /**
     * value: "FULL"
     * @const
     */
    FULL: "FULL"
  };

  return exports;

}));
